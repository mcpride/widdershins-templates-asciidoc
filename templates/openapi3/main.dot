{{= data.tags.section }}
[#{{=data.title_prefix}}]{{#def.schema_utils}}{{#def.asciidoc_utils}}
= {{=data.api.info && data.api.info.title}} {{=data.version}}
{{? data.api.info && data.api.info.description}}

{{=convertToAsciiDoc(data.api.info.description)}}
{{?}}
{{? data.api.servers }}

Base URLs:
{{~data.api.servers :s}}
* link:{{=s.url}}[{{=s.url}}]
{{ for(var v in s.variables) { }}
** *_{{=v}}_* - {{=s.variables[v].description||''}} Default: {{=s.variables[v].default}}
{{? s.variables[v].enum}}
{{~ s.variables[v].enum :e}}
*** {{= e}}
{{~}}
{{?}}
{{ } }}
{{~}}
{{?}}

{{? data.api.info && data.api.info.termsOfService}}link:{{=data.api.info.termsOfService}}[Terms of service]{{?}}
{{? data.api.info && data.api.info.contact}}{{? data.api.info.contact.email}}Email: mailto:{{=data.api.info.contact.email}}[{{=data.api.info.contact.name || 'Support'}}] {{?}}{{? data.api.info.contact.url}}Web: link:{{=data.api.info.contact.url}}[{{= data.api.info.contact.name || 'Support'}}] {{?}}{{?}}
{{? data.api.info && data.api.info.license}}{{? data.api.info.license.url}}License: link:{{=data.api.info.license.url}}[{{=data.api.info.license.name}}]{{??}} License: {{=data.api.info.license.name}}{{?}}{{?}}
{{= data.tags.endSection }}

{{? data.api.components && data.api.components.securitySchemes }}
{{#def.security}}
{{?}}

{{ for (var r in data.resources) { }}
{{ data.resource = data.resources[r]; }}

{{= data.tags.section }}
[#{{=data.title_prefix+'-'+ data.utils.slugify(r)}}]
== {{= r}}

{{? data.resource.description }}{{= data.resource.description}}{{?}}

{{? data.resource.externalDocs}}
link:{{=data.resource.externalDocs.url}}[{{=data.resource.externalDocs.description||'External documentation'}}]
{{?}}

{{ for (var m in data.resource.methods) { }}
{{ data.operationUniqueName = m; }}
{{ data.method = data.resource.methods[m]; }}
{{ data.operationUniqueSlug = data.method.slug; }}
{{ data.operation = data.method.operation; }}
{{= data.templates.operation(data) }}
{{ } /* of methods */ }}

{{= data.tags.endSection }}
{{ } /* of resources */ }}

{{? data.api.components && data.api.components.schemas }}
{{= data.tags.section }}

== Schemas

{{ for (var s in data.components.schemas) { }}
{{ var origSchema = data.components.schemas[s]; }}
{{ var schema = data.api.components.schemas[s]; }}

{{= data.tags.section }}
[#_{{=data.title_prefix}}_schema_{{=s.toLowerCase()}}]
=== {{=s}}

{{? data.options.yaml }}
====
YAML:

[source,yaml]
----
{{=data.utils.yaml.stringify(data.utils.getSample(schema,data.options,{quiet:true},data.api))}}
{{??}}
====
JSON:

[source,json]
----
{{=data.utils.safejson(data.utils.getSample(schema,data.options,{quiet:true},data.api),null,2)}}
{{?}}
----
====

{{ var enums = []; }}
{{ var blocks = data.utils.schemaToArray(origSchema,-1,{trim:true,join:true},data); }}
{{ for (var block of blocks) {
     for (var p of block.rows) {
       if (p.schema && p.schema.enum) {
         for (var e of p.schema.enum) {
           enums.push({name:p.name,value:e});
         }
       }
     }
   }
}}

{{~ blocks :block}}
{{? block.title }}{{= block.title}}{{= '\n\n'}}{{?}}
{{? block.externalDocs}}
link:{{=block.externalDocs.url}}[{{=block.externalDocs.description||'External documentation'}}]
{{?}}

{{? block===blocks[0] }}
{{= data.tags.section }}

==== Properties
{{?}}

[cols=",,,,",options="header"]
|===
{{? block.rows.length}}|Name|Type|Required|Restrictions|Description{{?}}
{{~ block.rows :p}}{{patchEntry(p);}}|{{=p.displayName}}|{{=p.safeType}}|{{=p.required}}|{{=p.restrictions||'none'}}|{{=p.description||'none'}}
{{~}}
|===
{{~}}
{{? (blocks[0].rows.length === 0) && (blocks.length === 1) }}
_None_
{{?}}

{{? enums.length > 0 }}
{{= data.tags.section }}

===== Enumerated Values

[cols=",",options="header"]
|===
|Property|Value
{{~ enums :e}}|{{=e.name}}|{{=data.utils.toPrimitive(e.value)}}
{{~}}
|===

{{= data.tags.endSection }}
{{?}}

{{= data.tags.endSection }}
{{= data.tags.endSection }}

{{ } /* of schemas */ }}

{{?}}

{{#def.footer}}

{{? data.options.discovery}}
{{#def.discovery}}
{{?}}
